
-- Table customers

CREATE TABLE IF NOT EXISTS customers (
    customer_id   BIGINT       PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    first_name    VARCHAR(50)  NOT NULL,
    last_name     VARCHAR(50)  NOT NULL,
    date_of_birth DATE         NOT NULL,
    email         VARCHAR(50)  NOT NULL UNIQUE,
    password      VARCHAR(255) NOT NULL
);

-- Table payment_methods

CREATE TABLE IF NOT EXISTS payment_methods (
    payment_method_id BIGINT      PRIMARY KEY,
    method            VARCHAR(20) NOT NULL UNIQUE
);

-- Table delivery_methods

CREATE TABLE IF NOT EXISTS delivery_methods (
    delivery_method_id BIGINT      PRIMARY KEY,
    method             VARCHAR(20) NOT NULL UNIQUE
);

-- Table payment_statuses

CREATE TABLE IF NOT EXISTS payment_statuses (
    payment_status_id BIGINT      PRIMARY KEY,
    status            VARCHAR(20) NOT NULL UNIQUE
);

-- Table order_statuses

CREATE TABLE IF NOT EXISTS order_statuses (
    order_status_id BIGINT      PRIMARY KEY,
    status          VARCHAR(20) NOT NULL UNIQUE
);

-- Table orders

CREATE TABLE IF NOT EXISTS orders (
    order_id           BIGINT       PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    customer_id        BIGINT       NOT NULL references customers(customer_id),
    payment_method_id  BIGINT       NOT NULL references payment_methods(payment_method_id),
    delivery_method_id BIGINT       NOT NULL references delivery_methods(delivery_method_id),
    payment_status_id  BIGINT       NOT NULL references payment_statuses(payment_status_id),
    order_status_id    BIGINT       NOT NULL references order_statuses(order_status_id),
    address            VARCHAR(255) NOT NULL,
    total              INT          NOT NULL,
    date_of_sale       TIMESTAMP    NOT NULL UNIQUE
);
CREATE INDEX customer_in_order ON orders(customer_id);
CREATE INDEX payment_method_in_order_idx ON orders(payment_method_id);
CREATE INDEX delivery_method_in_order_idx ON orders(delivery_method_id);
CREATE INDEX payment_status_in_order_idx ON orders(payment_status_id);
CREATE INDEX order_status_in_order_idx ON orders(order_status_id);

-- Table addresses

CREATE TABLE IF NOT EXISTS addresses (
    address_id  BIGINT       PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    customer_id BIGINT       NOT NULL references customers(customer_id),
    country     VARCHAR(50)  NOT NULL,
    city        VARCHAR(255) NOT NULL,
    zip_code    VARCHAR(9)   NOT NULL,
    street      VARCHAR(255) NOT NULL,
    building    INT          NOT NULL,
    apartment   INT          NOT NULL
);
CREATE INDEX customer_in_address ON addresses(customer_id);

-- Table categories

CREATE TABLE IF NOT EXISTS categories (
    category_id BIGINT      PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name        VARCHAR(50) NOT NULL UNIQUE
);

-- Table products

CREATE TABLE IF NOT EXISTS products (
    product_upc BIGINT       PRIMARY KEY,
    category_id BIGINT       NOT NULL references categories(category_id),
    name        VARCHAR(255) NOT NULL,
    price       INT          NOT NULL,
    brand       VARCHAR(20)  NOT NULL,
    color       VARCHAR(20)  NOT NULL,
    weight      INT          NOT NULL,
    height      INT          NOT NULL,
    width       INT          NOT NULL,
    depth       INT          NOT NULL,
    in_stock    INT          NOT NULL,
    deleted     BOOLEAN      NOT NULL,
    imagePath   VARCHAR(255) NOT NULL
);
CREATE INDEX category_in_product ON products(category_id);

-- Table products_in_orders

CREATE TABLE IF NOT EXISTS products_in_orders (
    products_in_order_id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    product_upc          BIGINT references products(product_upc),
    order_id             BIGINT references orders(order_id),
    number_of_products   INT    NOT NULL
);
CREATE INDEX product_in_order ON products_in_orders(product_upc);
CREATE INDEX order_in_product ON products_in_orders(order_id);

-- Table roles

CREATE TABLE IF NOT EXISTS roles (
    role_id BIGINT      PRIMARY KEY,
    name    VARCHAR(20) NOT NULL UNIQUE
);

-- Table roles_of_customers

CREATE TABLE IF NOT EXISTS roles_of_customers (
    roles_of_customer_id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    customer_id          BIGINT references customers(customer_id),
    role_id              BIGINT references roles(role_id)
);
CREATE INDEX role_of_customer ON roles_of_customers(customer_id);
CREATE INDEX customer_of_role ON roles_of_customers(customer_id);

-- Fill table roles

INSERT INTO roles (role_id, name)
VALUES (0, 'ROLE_ADMIN');
INSERT INTO roles (role_id, name)
VALUES (1, 'ROLE_USER');

-- Fill table payment_methods

INSERT INTO payment_methods (payment_method_id, method)
VALUES (0, 'CASH');
INSERT INTO payment_methods (payment_method_id, method)
VALUES (1, 'CARD');

-- Fill table delivery_methods

INSERT INTO delivery_methods (delivery_method_id, method)
VALUES (0, 'CORREOS_SPAIN');
INSERT INTO delivery_methods (delivery_method_id, method)
VALUES (1, 'DHL');

-- Fill table payment_statuses

INSERT INTO payment_statuses (payment_status_id, status)
VALUES (0, 'AWAITING_PAYMENT');
INSERT INTO payment_statuses (payment_status_id, status)
VALUES (1, 'PAID');

-- Fill table order_statuses

INSERT INTO order_statuses (order_status_id, status)
VALUES (0, 'AWAITING_PAYMENT');
INSERT INTO order_statuses (order_status_id, status)
VALUES (1, 'AWAITING_SHIPMENT');
INSERT INTO order_statuses (order_status_id, status)
VALUES (2, 'SHIPPED');
INSERT INTO order_statuses (order_status_id, status)
VALUES (3, 'DELIVERED');

-- Fill table categories

INSERT INTO categories (name)
VALUES ('TV');
INSERT INTO categories (name)
VALUES ('Tablet');
INSERT INTO categories (name)
VALUES ('Smart Watch');
INSERT INTO categories (name)
VALUES ('Mobile Phone');
INSERT INTO categories (name)
VALUES ('Laptop');
INSERT INTO categories (name)
VALUES ('Home');
INSERT INTO categories (name)
VALUES ('Gaming');
INSERT INTO categories (name)
VALUES ('Audio');
INSERT INTO categories (name)
VALUES ('Hobby');
INSERT INTO categories (name)
VALUES ('Kitchen');

-- Fill table products

INSERT INTO products (product_upc, category_id, name, price, brand, color, weight, height, width, depth,
                                      in_stock, deleted, imagePath)
VALUES (766871496808, 1, 'TV OLED 55 - LG OLED55B26LA OLED 4K', 1000, 'LG', 'Black', 1500, 139, 0, 0, 5, false,
        'TV OLED 55 - LG OLED55B26LA OLED 4K.JPG');

INSERT INTO products (product_upc, category_id, name, price, brand, color, weight, height, width, depth,
                                      in_stock, deleted, imagePath)
VALUES (766871499069, 2, 'Apple iPad Pro (2022 6 gen) 128 GB', 1500, 'Apple', 'Gray', 600, 33, 20, 1, 10, false,
        'Apple iPad Pro (2022 6 gen) 128 GB.JPG');

INSERT INTO products (product_upc, category_id, name, price, brand, color, weight, height, width, depth,
                                      in_stock, deleted, imagePath)
VALUES (766871496891, 3, 'Apple Watch Ultra (2022), GPS + Cellular, 49 mm', 980, 'Apple', 'Orange', 300, 0, 0, 0, 2, false,
        'Apple Watch Ultra (2022), GPS + Cellular, 49 mm.JPG');

INSERT INTO products (product_upc, category_id, name, price, brand, color, weight, height, width, depth,
                                      in_stock, deleted, imagePath)
VALUES (766871498864, 4, 'Apple iPhone 14 Pro Max, Golg, 256 GB', 1600, 'Apple', 'Gold', 800, 19, 7, 1, 3, false,
        'Apple iPhone 14 Pro Max, Golg, 256 GB.JPG');

INSERT INTO products (product_upc, category_id, name, price, brand, color, weight, height, width, depth,
                                      in_stock, deleted, imagePath)
VALUES (766871497072, 5, 'Apple MacBook Pro (2021), 14.2', 2000, 'Apple', 'Gray', 2300, 36, 40, 20, 4,
        false, 'Apple MacBook Pro (2021), 14.2.JPG');

INSERT INTO products (product_upc, category_id, name, price, brand, color, weight, height, width, depth,
                                      in_stock, deleted, imagePath)
VALUES (766871498130, 6, 'Lavadora carga frontal - Candy Smart Pro CSO 14105', 390, 'Candy', 'White', 10000, 1300, 600, 400, 6, false,
        'Lavadora carga frontal - Candy Smart Pro CSO 14105.JPG');

INSERT INTO products (product_upc, category_id, name, price, brand, color, weight, height, width, depth,
                                      in_stock, deleted, imagePath)
VALUES (766871498659, 7, 'PC Gaming - Pack Bronze Plus NITROPC', 845, 'Nitropc', 'Black', 4000, 2400, 2000, 850, 0, false,
        'PC Gaming - Pack Bronze Plus NITROPC.JPG');

INSERT INTO products (product_upc, category_id, name, price, brand, color, weight, height, width, depth,
                                      in_stock, deleted, imagePath)
VALUES (766871498376, 8, 'Headphones gaming - Logitech G G435', 65, 'Logitech', 'Purple', 260, 340, 150, 35, 8, false,
        'Headphones gaming - Logitech G G435.JPG');

INSERT INTO products (product_upc, category_id, name, price, brand, color, weight, height, width, depth,
                                      in_stock, deleted, imagePath)
VALUES (766871498086, 9, 'Canon EOS 2000D, 24.1 MP, CMOS APS-C, VÃ­deo Full HD', 460, 'Canon', 'Black', 700, 1400, 1100, 100, 9, false,
        'Canon EOS 2000D, 24.1 MP.JPG');

INSERT INTO products (product_upc, category_id, name, price, brand, color, weight, height, width, depth,
                                      in_stock, deleted, imagePath)
VALUES (766871498499, 10, 'Fridge Jocel JC-273LID', 360, 'Jocel', 'Gray', 5000, 1760, 350, 20, 10, false,
        'Fridge Jocel JC-273LID.JPG');

-- Fill table customers

INSERT INTO customers (first_name, last_name, date_of_birth, email, password)
VALUES ('Iaroslav', 'Nesterov', '1998-08-04', 'yaroslav.nesterov.98@mail.ru',
        '$2a$10$jgFLnE7SD8otn9vGMZ4vcO84Ch22Mf6bL4uzbCRc5oxsZ4OKKVYNe');
INSERT INTO customers (first_name, last_name, date_of_birth, email, password)
VALUES ('Antonio', 'Bandera', '1960-08-10', 'yyaro.biz@gmail.com',
        '$2a$10$P/Cu4E/WdRevOAm6Kf2VYumPeqmeuLRfe3Xgbxi0F2XxLyEKuJKiS');

-- Fill table addresses

INSERT INTO addresses (customer_id, country, city, zip_code, street, building, apartment)
VALUES (1, 'Spain', 'Granada', 18009, 'Plaza del Camina', 3, 123);


-- Fill table roles_of_customers

INSERT INTO roles_of_customers (customer_id, role_id)
VALUES (1, 0);
VALUES (2, 1);

-- Fill table orders



-- Fill table products_in_orders

